the.SWtest
qplot(yhat, ei, data = fish) +  ggtitle("Errors vs. Fitted Values") + xlab("Fitted Values") +
ylab("Errors") + geom_hline(yintercept = 0,col = "purple")
Group = rep("Lower",nrow(fish))
Group[fish$Length < median(fish$Length)] = "Upper"
Group = as.factor(Group)
fish$Group = Group
the.FKtest= fligner.test(fish$ei, fish$Group)
the.FKtest
CD=cooks.distance(the.model)
cutoff=0.20
outliers=which(CD>cutoff)
new.data=fish[-outliers,]
plot(CD,ylab = "Cook's Distance")+abline(h = cutoff)
new.model=lm(Length~Age+Temp,data=new.data)
new.betas=new.model$coefficients
the.a=the.model$coefficients
the.a
new.betas
alpha=0.1
the.CIs=confint(new.model,level = 1-alpha)
the.CIs
summary(new.model)$coefficient
View(new.data)
View(fish)
the.model=lm(Length~Age+Temp+Age*Temp,data=new.data)
the.beta=the.model$coefficients
the.beta
fish=read.csv("fish.csv",sep = ',',header = TRUE)
hos=read.csv("hospital.csv",sep = ',',header = TRUE)
pov=read.csv("poverty.csv",sep=',',header=TRUE)
library(ggplot2)
the.model=lm(Brth15to17~PovPct,data=pov)
pov$ei=the.model$residuals
pov$yhat=the.model$fitted.values
qqnorm(the.model$residuals)
qqline(the.model$residuals)
ei=the.model$residuals
the.SWtest=shapiro.test(ei)
the.SWtest
qplot(yhat, ei, data = pov) +  ggtitle("Errors vs. Fitted Values") + xlab("Fitted Values") +
ylab("Errors") + geom_hline(yintercept = 0,col = "purple")
Group = rep("Lower",nrow(pov))
Group[pov$Brth15to17 < median(pov$Brth15to17)] = "Upper"
Group = as.factor(Group)
pov$Group = Group
the.FKtest= fligner.test(pov$ei, pov$Group)
the.FKtest
CD=cooks.distance(the.model)
cutoff=0.20
outliers=which(CD>cutoff)
outliers
new.data=pov[-outliers,]
plot(CD,ylab = "Cook's Distance")+abline(h = cutoff)
new.model=lm(Brth15to17~PovPct,data=new.data)
new.betas=new.model$coefficients
the.a=the.model$coefficients
the.a
new.betas
alpha=0.1
the.CIs=confint(new.model,level = 1-alpha)
the.CIs
summary(new.model)$coefficients
the.model=lm(InfctRsk~MedSchool+Stay,data=hos)
hos$ei=the.model$residuals
hos$yhat=the.model$fitted.values
qqnorm(the.model$residuals)
qqline(the.model$residuals)
ei=the.model$residuals
the.SWtest=shapiro.test(ei)
the.SWtest
qplot(yhat, ei, data = hos) +  ggtitle("Errors vs. Fitted Values") + xlab("Fitted Values") +
ylab("Errors") + geom_hline(yintercept = 0,col = "purple")
Group = rep("Lower",nrow(hos))
Group[hos$InfctRsk < median(hos$InfctRsk)] = "Upper"
Group = as.factor(Group)
hos$Group = Group
the.FKtest= fligner.test(hos$ei, hos$Group)
the.FKtest
CD=cooks.distance(the.model)
cutoff=0.20
outliers=which(CD>cutoff)
outliers
new.data=hos[-outliers,]
plot(CD,ylab = "Cook's Distance")+abline(h = cutoff)
new.model=lm(InfctRsk~MedSchool+Stay,data=new.data)
new.betas=new.model$coefficients
the.a=the.model$coefficients
the.a
new.betas
alpha=0.1
the.CIs=confint(new.model,level = 1-alpha)
the.CIs
summary(new.model)$coefficients
the.model=lm(InfctRsk~MedSchool+Stay+MedSchool*Stay,data=new.data)
the.beta=the.model$coefficients
the.beta
alpha=0.1
the.CIs=confint(the.model,level = 1-alpha)
the.CIs
the.model=lm(Length~Age+Temp,data=fish)
fish$ei=the.model$residuals
fish$yhat=the.model$fitted.values
qqnorm(the.model$residuals)
qqline(the.model$residuals)
ei=the.model$residuals
the.SWtest=shapiro.test(ei)
the.SWtest
qplot(yhat, ei, data = fish) +  ggtitle("Errors vs. Fitted Values") + xlab("Fitted Values") +
ylab("Errors") + geom_hline(yintercept = 0,col = "purple")
Group = rep("Lower",nrow(fish))
Group[fish$Length < median(fish$Length)] = "Upper"
Group = as.factor(Group)
fish$Group = Group
the.FKtest= fligner.test(fish$ei, fish$Group)
the.FKtest
CD=cooks.distance(the.model)
cutoff=0.20
outliers=which(CD>cutoff)
new.data=fish[-outliers,]
plot(CD,ylab = "Cook's Distance")+abline(h = cutoff)
new.model=lm(Length~Age+Temp,data=new.data)
new.betas=new.model$coefficients
the.a=the.model$coefficients
the.a
new.betas
alpha=0.1
the.CIs=confint(new.model,level = 1-alpha)
the.CIs
summary(new.model)$coefficient
the.model=lm(Length~Age+Temp+Age*Temp,data=new.data)
m=the.model$coefficients
m
fish=read.csv("fish.csv",sep = ',',header = TRUE)
hos=read.csv("hospital.csv",sep = ',',header = TRUE)
pov=read.csv("poverty.csv",sep=',',header=TRUE)
library(ggplot2)
the.model=lm(Brth15to17~PovPct,data=pov)
pov$ei=the.model$residuals
pov$yhat=the.model$fitted.values
qqnorm(the.model$residuals)
qqline(the.model$residuals)
ei=the.model$residuals
the.SWtest=shapiro.test(ei)
the.SWtest
qplot(yhat, ei, data = pov) +  ggtitle("Errors vs. Fitted Values") + xlab("Fitted Values") +
ylab("Errors") + geom_hline(yintercept = 0,col = "purple")
Group = rep("Lower",nrow(pov))
Group[pov$Brth15to17 < median(pov$Brth15to17)] = "Upper"
Group = as.factor(Group)
pov$Group = Group
the.FKtest= fligner.test(pov$ei, pov$Group)
the.FKtest
CD=cooks.distance(the.model)
cutoff=0.20
outliers=which(CD>cutoff)
outliers
new.data=pov[-outliers,]
plot(CD,ylab = "Cook's Distance")+abline(h = cutoff)
new.model=lm(Brth15to17~PovPct,data=new.data)
new.betas=new.model$coefficients
the.a=the.model$coefficients
the.a
new.betas
alpha=0.1
the.CIs=confint(new.model,level = 1-alpha)
the.CIs
summary(new.model)$coefficients
the.model=lm(InfctRsk~MedSchool+Stay,data=hos)
hos$ei=the.model$residuals
hos$yhat=the.model$fitted.values
qqnorm(the.model$residuals)
qqline(the.model$residuals)
ei=the.model$residuals
the.SWtest=shapiro.test(ei)
the.SWtest
qplot(yhat, ei, data = hos) +  ggtitle("Errors vs. Fitted Values") + xlab("Fitted Values") +
ylab("Errors") + geom_hline(yintercept = 0,col = "purple")
Group = rep("Lower",nrow(hos))
Group[hos$InfctRsk < median(hos$InfctRsk)] = "Upper"
Group = as.factor(Group)
hos$Group = Group
the.FKtest= fligner.test(hos$ei, hos$Group)
the.FKtest
CD=cooks.distance(the.model)
cutoff=0.20
outliers=which(CD>cutoff)
outliers
new.data=hos[-outliers,]
plot(CD,ylab = "Cook's Distance")+abline(h = cutoff)
new.model=lm(InfctRsk~MedSchool+Stay,data=new.data)
new.betas=new.model$coefficients
the.a=the.model$coefficients
the.a
new.betas
alpha=0.1
the.CIs=confint(new.model,level = 1-alpha)
the.CIs
summary(new.model)$coefficients
the.model=lm(InfctRsk~MedSchool+Stay+MedSchool*Stay,data=new.data)
the.beta=the.model$coefficients
the.beta
alpha=0.1
the.CIs=confint(the.model,level = 1-alpha)
the.CIs
the.model=lm(Length~Age+Temp,data=fish)
fish$ei=the.model$residuals
fish$yhat=the.model$fitted.values
qqnorm(the.model$residuals)
qqline(the.model$residuals)
ei=the.model$residuals
the.SWtest=shapiro.test(ei)
the.SWtest
qplot(yhat, ei, data = fish) +  ggtitle("Errors vs. Fitted Values") + xlab("Fitted Values") +
ylab("Errors") + geom_hline(yintercept = 0,col = "purple")
Group = rep("Lower",nrow(fish))
Group[fish$Length < median(fish$Length)] = "Upper"
Group = as.factor(Group)
fish$Group = Group
the.FKtest= fligner.test(fish$ei, fish$Group)
the.FKtest
CD=cooks.distance(the.model)
cutoff=0.10
outliers=which(CD>cutoff)
new.data=fish[-outliers,]
plot(CD,ylab = "Cook's Distance")+abline(h = cutoff)
new.model=lm(Length~Age+Temp,data=new.data)
new.betas=new.model$coefficients
the.a=the.model$coefficients
the.a
new.betas
alpha=0.1
the.CIs=confint(new.model,level = 1-alpha)
the.CIs
summary(new.model)$coefficient
the.model=lm(Length~Age+Temp+Age*Temp,data=new.data)
m=the.model$coefficients
m
summary(new.model)$coefficient
summary(new.model)$coefficients
a.model=lm(Length~Age+Temp+Age*Temp,data=new.data)
m=a.model$coefficients
m
alpha=0.1
the.CIs=confint(the.model,level = 1-alpha)
the.CIs
the.CIs[2,1]
the.CIs[4,1]
the.CIs[4,2]
the.CIs
the.CIs[4,1]
the.CIs[4,2]
salary=read.csv("salary3.csv",sep = ",",head=FALSE)
head(salary)
install.packages(MPV)
install.packages(leaps)
install.packages('leaps')
install.packages('MPV')
All.Criteria = function(the.model){
p = length(the.model$coefficients)
n = length(the.model$residuals)
the.BIC = BIC(the.model)
the.LL = logLik(the.model)
the.AIC = AIC(the.model)
the.PRESS = PRESS(the.model)
the.R2adj = summary(the.model)$adj.r.squared
the.results = c(the.LL,p,n,the.AIC,the.BIC,the.PRESS,the.R2adj)
names(the.results) = c("LL","p","n","AIC","BIC","PRESS","R2adj")
return(the.results)
}
library(ggplot)
library(ggplot2)
smaller.model = lm(sl ~ yd + dg + sx, data = salary)
salary=read.csv("salary3.csv",sep = ",",head=FALSE)
head(salary)
smaller.model = lm(sl ~ yd + dg + sx, data = salary)
mydata=read.csv("salary3.csv",sep = ",",head=FALSE)
library(ggplot2)
head(salary)
smaller.model = lm(sl ~ yd + dg + sx, data = mydata)
mydata=read.csv("salary3.csv",sep = ",",head=FALSE)
library(ggplot2)
head(mydata)
mydata=read.csv("salary3.csv",sep = ",",head=TRUE
head(mydata)
mydata=read.csv("salary3.csv",sep = ",",head=TRUE)
head(mydata)
All.Criteria = function(the.model){
p = length(the.model$coefficients)
n = length(the.model$residuals)
the.BIC = BIC(the.model)
the.LL = logLik(the.model)
the.AIC = AIC(the.model)
the.PRESS = PRESS(the.model)
the.R2adj = summary(the.model)$adj.r.squared
the.results = c(the.LL,p,n,the.AIC,the.BIC,the.PRESS,the.R2adj)
names(the.results) = c("LL","p","n","AIC","BIC","PRESS","R2adj")
return(the.results)
}
smaller.model = lm(sl ~ yd + dg + sx, data = mydata)
anova.small = anova(smaller.model)
larger.model = lm(sl ~ yd + dg + sx + rk, data = mydata)
anova.large = anova(larger.model)
anova.sum=anova(smaller.model,larger.model)
anova.sum
smaller.model = lm(sl ~ yd + rk, data = mydata)
anova.sum=anova(smaller.model,larger.model)
anova.sum
Partial.R2 = function(small.model,big.model){
SSE1 = sum(small.model$residuals^2)
SSE2 = sum(big.model$residuals^2)
PR2 = (SSE1 - SSE2)/SSE1
return(PR2)
}
partial.R2
small.model=lm(sl~rk, data=salary3)
small.model=lm(sl~rk, data=mydata)
big.model=lm(sl~yd, data=salary3)
small.model=lm(sl~rk, data=mydata)
big.model=lm(sl~yd, data=mydata)
partial.R2=Partial.R2(small.model, big.model)
partial.R2
small.model=lm(sl~yd+rk, data=mydata)
big.model=lm(sl~yd, data=mydata)
partial.R2=Partial.R2(small.model, big.model)
partial.R2
small.model=lm(sl~yd+rk, data=mydata)
big.model=lm(sl~yd, data=mydata)
partial.R2=Partial.R2(small.model, big.model)
partial.R2
small.model=lm(sl~yd, data=mydata)
big.model=lm(sl~yd+rk, data=mydata)
partial.R2=Partial.R2(small.model, big.model)
partial.R2
partial.R2*100
names(mydata) = c("Y","X1","X2","X3","X4" )
all.models = c("Y ~ X1", "Y ~ X2", "Y ~ X3", "Y ~ X4",
"Y ~ X1 + X2", "Y ~ X1 + X3", "Y ~ X1 + X4",
"Y ~ X1 + X2 + X4", "Y ~ X1 + X3 + X4",
"Y ~ X1 + X2 + X3 + X4")
all.model.crit = t(sapply(all.models,function(M){
current.model = lm(M,data = mydata)
All.Criteria(current.model)
}))
mydata=read.csv("salary3.csv",sep = ",",head=TRUE)
head(mydata)
library(ggplot2)
library(MPV)
library(leaps)
all.model.crit = t(sapply(all.models,function(M){
current.model = lm(M,data = mydata)
All.Criteria(current.model)
}))
all.models = c("Y ~ X1", "Y ~ X2", "Y ~ X3", "Y ~ X4",
"Y ~ X1 + X2", "Y ~ X1 + X3", "Y ~ X1 + X4",
"Y ~ X1 + X2 + X4", "Y ~ X1 + X3 + X4",
"Y ~ X1 + X2 + X3 + X4")
names(mydata) = c("Y","X1","X2","X3","X4" )
all.models = c("Y ~ X1", "Y ~ X2", "Y ~ X3", "Y ~ X4",
"Y ~ X1 + X2", "Y ~ X1 + X3", "Y ~ X1 + X4",
"Y ~ X1 + X2 + X4", "Y ~ X1 + X3 + X4",
"Y ~ X1 + X2 + X3 + X4")
all.model.crit = t(sapply(all.models,function(M){
current.model = lm(M,data = mydata)
All.Criteria(current.model)
}))
round(all.model.crit,4)
##### set work directory and load dataset #####
setwd("D:\UCD_STA101\project1\Rscripts")
##### set work directory and load dataset #####
setwd("D:\UCD_STA101\project1\Rscripts")
##### set work directory and load dataset #####
setwd(r"D:\UCD_STA101\project1\Rscripts")
##### set work directory and load dataset #####
setwd("D:\\UCD_STA101\\project1\\Rscripts")
HospFull<-read.csv("HospFull.csv", header = TRUE)
head(HospFull, n = 3)
##### load packages #####
library("ggplot2")
library("leaps")
library("MPV")
##### define functions #####
Partial.R2 = function(small.model,big.model){
SSE1 = sum(small.model$residuals^2)
SSE2 = sum(big.model$residuals^2)
PR2 = (SSE1 - SSE2)/SSE1
return(PR2)
}
All.Criteria = function(the.model){
p = length(the.model$coefficients)
n = length(the.model$residuals)
the.BIC = BIC(the.model)
the.LL = logLik(the.model)
the.AIC = AIC(the.model)
the.PRESS = PRESS(the.model)
the.R2adj = summary(the.model)$adj.r.squared
# the.CP = summary(the.model)$cp
the.results = c(the.LL,p,n,the.AIC,the.BIC,the.PRESS,the.R2adj)
names(the.results) = c("LL","p","n","AIC","BIC","PRESS","R2adj")
return(the.results)
}
##### correlation #####
cor(HospFull$Length, HospFull$Infect)
cor(HospFull$Culture, HospFull$Infect)
cor(HospFull$Bed, HospFull$Infect)
##### Infect summary #####
summary(HospFull$Infect)
# grouped by MedSchool
aggregate(Infect ~ MedSchool, data = HospFull, summary)
# grouped by Region
aggregate(Infect ~ Region, data = HospFull, summary)
# plot(HospFull)
##### boxplots of Infect #####
require(ggplot2)
# boxplot grouped by MedSchool
ppi = 600
# Calculate the height and width (in pixels) for a 4x3-inch image at 600 ppi
png("group_boxplot_medschool.png", width=6*ppi, height=4*ppi, res=ppi)
ggplot(HospFull, aes(y=Infect, x = MedSchool))+ theme_gray() + geom_boxplot() + ylab("Probability of acquiring infection in hospital") +
xlab("category of MedSchool")+ coord_flip()
#ggtitle("Boxplot of Infect grouped by Medchool")
dev.off()
# boxplot grouped by Region
png("group_boxplot_region.png", width=6*ppi, height=4*ppi, res=ppi)
ggplot(HospFull, aes(y=Infect, x = Region))+ theme_gray() + geom_boxplot() + ylab("Probability of acquiring infection in hospital") +
xlab("category of Geographical region")+ coord_flip()
#ggtitle("Boxplot of Infect grouped by Region")
dev.off()
##### scatter plots of Infect #####
# scatter plot of Infect vs. Length
png("scatter_plot_length.png", width=6*ppi, height=4*ppi, res = ppi)
qplot(HospFull$Length, HospFull$Infect, data = HospFull) +xlab("length of stay") + ylab("probability of acquiring infection")
dev.off()
# scatter plot of Infect vs. Culture
png("scatter_plot_culture.png",  width=6*ppi, height=4*ppi, res = ppi)
qplot(HospFull$Culture, HospFull$Infect, data = HospFull) +xlab("culture/patients * 100") + ylab("probability of acquiring infection")
dev.off()
# scatter plot of Infect vs. Bed
png("scatter_plot_bed.png", width=6*ppi, height=4*ppi, res = ppi)
qplot(HospFull$Bed, HospFull$Infect, data = HospFull) +xlab("number of beds") + ylab("probability of acquiring infection")
dev.off()
##### remove outliers according to plots #####
# cover HospFull
the.original = HospFull
HospFull=HospFull[-which(HospFull$Length>15),]
HospFull=HospFull[-which(HospFull$Culture>60),]
HospFull=HospFull[-which(HospFull$MedSchool=="Y" & HospFull$Infect > 7),]
HospFull=HospFull[-which(HospFull$MedSchool=="N" & HospFull$Infect > 7),]
HospFull=HospFull[-which(HospFull$Region=="W" & HospFull$Infect < 3),]
HospFull=HospFull[-which(HospFull$Region=="NC" & HospFull$Infect < 2),]
length(the.original$Infect)
length(HospFull$Infect)
the.ratio = (length(the.original$Infect)-length(HospFull$Infect))/length(the.original$Infect)
the.ratio
##### subset models of Infect~. #####
# rename dataset for convenience
names(HospFull) = c("X1","Y","X2","X3","X4","X5")
full.model = lm(Y~ X1 + X2 + X3 + X4 + X5,data = HospFull)
round(full.model$coefficients,4)
bic.model = lm(Y~X1+X2+X5, data = HospFull)
round(bic.model$coefficients, 4)
all.models = c("Y~1","Y~X1","Y~X2","Y~X3","Y~X4","Y~X5",
"Y~X1+X2","Y~X1+X3","Y~X1+X4","Y~X1+X5","Y~X2+X3","Y~X2+X4","Y~X2+X5","Y~X3+X4","Y~X3+X5","Y~X4+X5",
"Y~X1+X2+X3","Y~X1+X2+X4","Y~X1+X2+X5","Y~X1+X3+X4","Y~X1+X3+X5","Y~X1+X4+X5","Y~X2+X3+X4","Y~X2+X3+X5","Y~X2+X4+X5","Y~X3+X4+X5",
"Y~X1+X2+X3+X4","Y~X1+X2+X3+X5","Y~X1+X2+X4+X5","Y~X1+X3+X4+X5","Y~X2+X3+X4+X5",
"Y~X1+X2+X3+X4+X5")
Infect.all.model.crit = t(sapply(all.models,function(M){
current.model = lm(M,data = HospFull)
All.Criteria(current.model)
}))
Infect.all.model.crit
Infect.all.model.crit = data.frame(Infect.all.model.crit)
# find the model with lowest BIC
Infect.all.model.crit[which(Infect.all.model.crit$BIC == min(Infect.all.model.crit[,5])),]
# find the model with lowest AIC
Infect.all.model.crit[which(Infect.all.model.crit$AIC == min(Infect.all.model.crit[,4])),]
##### anova analysis of X4 #####
summary(full.model)
summary(bic.model)
alpha = 0.05
the.CIs = confint(full.model,level = 1-alpha)
round(the.CIs, 4)
# drop X4
smaller.model = lm(Y~X1+X2+X3+X5, data = HospFull)
anova.small = anova(smaller.model)
larger.model = lm(Y~X1+X2+X3+X4+X5, data = HospFull)
anova.large = anova(larger.model)
anova(smaller.model,larger.model)
##### anova analysis of X3 #####
smaller.model = lm(Y~X1+X2+X5, data = HospFull)
anova.small = anova(smaller.model)
larger.model = lm(Y~X1+X2+X3+X5, data = HospFull)
anova.large = anova(larger.model)
anova(smaller.model,larger.model)
##### partial r2 of X3 #####
partial.R2=Partial.R2(smaller.model, larger.model)
partial.R2
##### considering interaction terms #####
# interaction term between X1 and X5
final.model = lm(Y~X1+X2+X5, data = HospFull)
final.model
X1.interation.model = lm(Y~X1+X2+X5+X1*X5, data = HospFull)
summary(X1.interation.model)
confint(X1.interation.model,level = 1-alpha)
anova(final.model,X1.interation.model)
partial.R2=Partial.R2(final.model,X1.interation.model)
partial.R2
# interaction term between X2 and X5
X2.interation.model = lm(Y~X1+X2+X5+X2*X5, data = HospFull)
X2.interation.model
summary(X2.interation.model)
confint(X2.interation.model,level = 1-alpha)
